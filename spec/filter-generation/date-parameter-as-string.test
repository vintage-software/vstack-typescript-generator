{}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
namespace Services.Filters.Person
{
  public class ByBirthdate
    : IPrimaryDtoFilter<Dmn.Person, PersonMapper, Permissions>
  {
    private readonly DateTime birthdate;
    private readonly DateTime[] birthdates;

    public ByBirthdate(DateTime birthdate, DateTime[] birthdates)
    {
      this.birthdate = birthdate;
      this.birthdates = birthdates;
    }

    public RestStatus HasPrimaryPermissions(Permissions permissions)
    {
      return RestStatus.Ok;
    }

    public IQueryable<Dmn.Person> PrimaryFilter(PersonMapper mapper)
    {
      return something;
    }
  }
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
export class PeopleByBirthdatePrimaryFilter extends PrimaryFilter<Person> {
  constructor(private birthdate: string, private birthdates: string[]) {
    super();
  }

  public getFilterName(): string {
    return 'ByBirthdate';
  }

  public getParameters(): string[] {
    return [encodeURIComponent(this.birthdate), this.birthdates.map(value => encodeURIComponent(value)).join(',')];
  }

  protected __dummy(): Person {
    return null;
  }
}